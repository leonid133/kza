C51 COMPILER V9.00   MMCFLASH                                                              07/03/2012 08:49:43 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MMCFLASH
OBJECT MODULE PLACED IN mmcflash.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe mmcflash.c DB OE BR

line level    source

   1          #include "c8051f120.h"
   2          #include "mmcflash.h"
   3          #include <intrins.h>
   4          #include <stdio.h>                     
   5          #include <ctype.h> 
   6          
   7          //SPI------------------------------------------------------------------
   8          void SPI_Init (void)
   9          {
  10   1              SPI0CFG = 0x40;
  11   1              SPI0CN = 0x0F;
  12   1              SPI0CKR = 0x08; //2.8 Mhz
  13   1      }                                                                                                         
             -                                                                                                                        
             -                                                                  
  14          
  15          //-----------------------------------------------------------------------
  16          char MMC_init(void)
  17          {
  18   1              xdata unsigned int i, i2;
  19   1              xdata unsigned char b;
  20   1              xdata unsigned long flesh_init_timer=0;
  21   1      
  22   1              xdata char SFRPAGE_SAVE = SFRPAGE;
  23   1              SFRPAGE = SPI0_PAGE;
  24   1      
  25   1              CS = 1;
  26   1              for (i = 0; i < 10; i++)
  27   1              {
  28   2                      SPI0DAT = 0xFF; while(SPIF == 0) ;   SPIF = 0;
  29   2              }
  30   1      
  31   1              CS = 0;
  32   1      //CMD0 
  33   1              SPI0DAT = 0x40; while(SPIF == 0) ;   SPIF = 0;
  34   1              SPI0DAT = 0x00;   while(SPIF == 0) ;   SPIF = 0;
  35   1              SPI0DAT = 0x00;   while(SPIF == 0) ;   SPIF = 0;
  36   1              SPI0DAT = 0x00;   while(SPIF == 0) ;   SPIF = 0;
  37   1              SPI0DAT = 0x00; while(SPIF == 0) ;   SPIF = 0;
  38   1              SPI0DAT = 0x95;   while(SPIF == 0) ;   SPIF = 0;
  39   1              
  40   1              do
  41   1              {
  42   2                      SPI0DAT = 0xFF; while(SPIF == 0)        ;       SPIF = 0;
  43   2                      b = SPI0DAT;
  44   2                      flesh_init_timer++;
  45   2                      if (flesh_init_timer > 0x00dffff0)
  46   2                              return 0;               
  47   2              } while(b == 0xFF);
  48   1              while(SPI0DAT != 0xFF)
  49   1              {
  50   2                      SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0;
  51   2              }
  52   1      
  53   1              do
C51 COMPILER V9.00   MMCFLASH                                                              07/03/2012 08:49:43 PAGE 2   

  54   1              {
  55   2                      //CMD1  
  56   2                      CS = 1;
  57   2                      for (i = 0; i < 10; i++)
  58   2                      {
  59   3                              SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0;
  60   3                      }
  61   2      
  62   2                      CS = 0;
  63   2      
  64   2                      SPI0DAT = 0x41; while(SPIF == 0) ;      SPIF = 0;
  65   2                      SPI0DAT = 0x00; while(SPIF == 0) ;      SPIF = 0;
  66   2                      SPI0DAT = 0x00; while(SPIF == 0) ;      SPIF = 0;
  67   2                      SPI0DAT = 0x00; while(SPIF == 0) ;      SPIF = 0;
  68   2                      SPI0DAT = 0x00; while(SPIF == 0) ;      SPIF = 0;
  69   2                      SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0;
  70   2              b = SPI0DAT;
  71   2                      do
  72   2                      {
  73   3                              SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0;
  74   3                              b = SPI0DAT;
  75   3                      } while(b == 0xFF);
  76   2              
  77   2                      while(SPI0DAT != 0xFF) 
  78   2                      {
  79   3                              SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0;
  80   3                      }       
  81   2              
  82   2                      for (i2 = 0; i2 < 15; i2++)
  83   2                      {
  84   3                              for (i = 0; i < 65534; i++)
  85   3                              {
  86   4                                      _nop_();
  87   4                              }
  88   3                      }
  89   2              } while ((b & 0x01));
  90   1              CS = 1; 
  91   1              SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0;
  92   1              SFRPAGE = SFRPAGE_SAVE;
  93   1              return 1;
  94   1      }
  95          
  96          //-----------------------------------------------------------------------------------------
  97          char WriteByteInKZA(unsigned char Byte)
  98          { 
  99   1              static xdata unsigned char Buffer[512];
 100   1              static xdata int nByte = 0;
 101   1              static xdata unsigned long address = 0;
 102   1              xdata unsigned char b;
 103   1              xdata unsigned int i = 0;
 104   1              xdata unsigned long flesh_init_timer=0;
 105   1      
 106   1              Buffer[nByte++] = Byte;
 107   1              if (nByte >= 512) 
 108   1              {
 109   2                      SFRPAGE = SPI0_PAGE;
 110   2      
 111   2                      SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0;
 112   2                      CS = 0;
 113   2                      SPI0DAT = 0x58; while(SPIF == 0) ;      SPIF = 0;
 114   2                      SPI0DAT = (address & 0xff); while(SPIF == 0) ;  SPIF = 0;
 115   2                      SPI0DAT = (address & 0xff00) >> 8; while(SPIF == 0) ;   SPIF = 0;
C51 COMPILER V9.00   MMCFLASH                                                              07/03/2012 08:49:43 PAGE 3   

 116   2                      SPI0DAT = (address & 0xff0000) >> 16; while(SPIF == 0) ;        SPIF = 0;
 117   2                      SPI0DAT = (address & 0xff000000) >> 24; while(SPIF == 0) ;      SPIF = 0;
 118   2                      SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0;
 119   2                      do
 120   2                      {
 121   3                              SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0;
 122   3                              b = SPI0DAT;    // 00-ok, 20-Adress Err, 40,60-Param Err
 123   3                              if(b!=0xFF && b!=0x00)
 124   3                                      return 0;
 125   3                              flesh_init_timer++;
 126   3                              if (flesh_init_timer > 0x00dffff0)
 127   3                                      return 0;
 128   3                      } while(b == 0xFF);
 129   2              
 130   2                      while(SPI0DAT != 0xFF) 
 131   2                      {
 132   3                              SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0;
 133   3                      }
 134   2                      SPI0DAT = 0xFE; while(SPIF == 0) ;      SPIF = 0;
 135   2                      for(i=0; i<512; i++)
 136   2                      {
 137   3                              SPI0DAT = Buffer[i]; while(SPIF == 0) ;         SPIF = 0;
 138   3                      }
 139   2                      SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0; //crc1
 140   2                      SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0; //crc0
 141   2                      while(SPI0DAT != 0xFF) 
 142   2                      {
 143   3                              SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0;
 144   3                      }
 145   2                      CS = 1; 
 146   2                      SPI0DAT = 0xFF; while(SPIF == 0) ;      SPIF = 0;
 147   2                      
 148   2                      address += 512;
 149   2                      nByte = 0;
 150   2              }
 151   1              return 1;
 152   1      }                                                                                       


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    887    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    518      17
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
