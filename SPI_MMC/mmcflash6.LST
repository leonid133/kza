C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MMCFLASH6
OBJECT MODULE PLACED IN mmcflash6.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe mmcflash6.c DB OE BR

line level    source

   1          #include "c8051f120.h"
   2          #include "mmcflash5.h"
   3          #include <intrins.h>
   4          #include <stdio.h>                     
   5          #include <ctype.h> 
   6          
   7          #define FILETABLE    0x00001000        //адрес таблицы файлов
   8          #define ZAGOLOVOK       0x00001200                      //адрес заголовочного сектора
   9          #define STARTADDR       0x00001400                      //адрес начала записи данных по умолчанию
  10          #define EOFDELTA                0x00EA6000                      //периодичность метки конца записи 5мин
  11          #define FLASHSIZE       0x3B600000;             //950Mb
  12          
  13          xdata unsigned char flash = 0, MMC_CMD = 0xff, jump = 0, flageofrec = 0, newfile = 0;
  14          xdata unsigned long eofaddr=EOFDELTA, address = ZAGOLOVOK, szflash = 0, slipbyte = 0, nzap = 0, lastaddr =
             - 0, tmpaddr=0, jumpaddr=0, time_t=1353038382;
  15          
  16          xdata unsigned int i_wr, eoferr = 0;
  17          xdata unsigned char BufferInKZA[512], BuffFromKza[512];
  18          sbit CS = P3^2;
  19          
  20          //SPI------------------------------------------------------------------
  21          void SPI_Init (void)
  22          {
  23   1              SPI0CFG = 0x40;
  24   1              SPI0CN = 0x0F;
  25   1              SPI0CKR = 0x08; //2.8 Mhz
  26   1      }                                                                                                         
             -                                                                                                                        
             -                                                                  
  27          
  28          //----------------------------------------------------------------------
  29          void SPI_isr(void) interrupt 6
  30          {
  31   1              static xdata unsigned long stoprec=0;
  32   1              static xdata unsigned char b=0xff;
  33   1              static xdata unsigned int i_CMD = 0x00;
  34   1              static xdata unsigned long timeFlashOver = 0;
  35   1              xdata unsigned char *pchar, dummy_CRC;
  36   1              xdata unsigned int size;
  37   1              xdata char SFRPAGE_SAVE = SFRPAGE;
  38   1              SFRPAGE = SPI0_PAGE;
  39   1      
  40   1              SPIF = 0;
  41   1              flash = 0;
  42   1         if(MMC_CMD == 0xFF)
  43   1              {
  44   2                      flash=1;
  45   2                      CS = 1;
  46   2              }
  47   1              else if(MMC_CMD == 0x00) //init------------------------
  48   1              {
  49   2                      i_CMD++;
  50   2                      if(i_CMD == 1)
  51   2                      {
  52   3                              CS = 1; 
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 2   

  53   3                              SPI0DAT = 0xFF; 
  54   3                      }
  55   2                      else if(i_CMD < 10)
  56   2                      {
  57   3                              SPI0DAT = 0xFF; 
  58   3                      }
  59   2                      else if(i_CMD == 10)
  60   2                      {
  61   3                              CS = 0; 
  62   3                              SPI0DAT = 0xFF; 
  63   3                      }
  64   2                      else            //CMD0------------------------------------- 
  65   2                      {
  66   3                              MMC_CMD = 0x01;
  67   3                              i_CMD = 0x00;
  68   3                              SPI0DAT = 0x40; 
  69   3                      }
  70   2              }
  71   1              else if(MMC_CMD == 0x01)
  72   1              {
  73   2                      if (i_CMD < 0x04)
  74   2                      {
  75   3                              i_CMD++;                        
  76   3                              SPI0DAT = 0x00; 
  77   3                      }
  78   2                      else 
  79   2                      {
  80   3                              i_CMD = 0x00;
  81   3                              MMC_CMD = 0x02;
  82   3                              SPI0DAT = 0x95;
  83   3                      } 
  84   2              }
  85   1              else if(MMC_CMD == 0x02)
  86   1              {
  87   2                      MMC_CMD = 0x03;
  88   2                      SPI0DAT = 0xFF; 
  89   2              }
  90   1              else if(MMC_CMD == 0x03)
  91   1              {
  92   2                      b = SPI0DAT;
  93   2                      if(b != 0xFF);
  94   2                      {
  95   3                              MMC_CMD = 0x04;
  96   3                              timeFlashOver = 0;
  97   3                      }
  98   2                      SPI0DAT = 0xFF; 
  99   2              }
 100   1              else if(MMC_CMD == 0x04)
 101   1              {
 102   2                      b = SPI0DAT;
 103   2                      if(b == 0x00)
 104   2                      {
 105   3                              timeFlashOver = 0;
 106   3                              MMC_CMD = 0xFF;
 107   3                      }
 108   2                      else if(b == 0xFF)
 109   2                      {
 110   3                              timeFlashOver = 0;
 111   3                              MMC_CMD = 0x05;
 112   3                              CS = 1;
 113   3                      }
 114   2                      else
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 3   

 115   2                      {
 116   3                              if(timeFlashOver++ > 0x001d0000)
 117   3                              {
 118   4                                      MMC_CMD = 0; SPIF = 1;
 119   4                                      goto EndSpiIsr;
 120   4                              }
 121   3                      }
 122   2                      SPI0DAT = 0xFF; 
 123   2              } //--end CMD0--
 124   1              else if(MMC_CMD == 0x05)
 125   1              {
 126   2                      if(i_CMD < 0x09)
 127   2                      {
 128   3                              i_CMD++;
 129   3                              SPI0DAT = 0xFF; 
 130   3                      }
 131   2                      else    //CMD1
 132   2                      {
 133   3                              CS = 0; 
 134   3                              i_CMD = 0;
 135   3                              MMC_CMD = 6;
 136   3                              SPI0DAT = 0x41; 
 137   3                      }
 138   2              }
 139   1              else if(MMC_CMD == 0x06) 
 140   1              {
 141   2                      if (i_CMD < 0x04)
 142   2                      {
 143   3                              i_CMD++;
 144   3                              SPI0DAT = 0x00; 
 145   3                      }
 146   2                      else
 147   2                      {
 148   3                              i_CMD = 0x00; 
 149   3                              MMC_CMD = 0x07;
 150   3                              SPI0DAT = 0xFF;
 151   3                              timeFlashOver = 0;
 152   3                      }
 153   2              }
 154   1              else if(MMC_CMD == 0x07)
 155   1              {
 156   2                      b = SPI0DAT;
 157   2                      if(b != 0xFF)
 158   2                      {
 159   3                              timeFlashOver = 0;
 160   3                              MMC_CMD = 8;
 161   3                      }
 162   2                      else if(timeFlashOver++ > 0x001d0000)
 163   2                      {
 164   3                              MMC_CMD = 0; 
 165   3                              SPIF = 1;
 166   3                              goto EndSpiIsr;
 167   3                      }
 168   2                      SPI0DAT = 0xFF; 
 169   2              }
 170   1              else if(MMC_CMD == 0x08)
 171   1              {
 172   2                      if(SPI0DAT == 0xFF)
 173   2                      {
 174   3                              MMC_CMD = 0x09;
 175   3                      }
 176   2                      SPI0DAT = 0xFF; 
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 4   

 177   2              }
 178   1              else if(MMC_CMD == 0x09)
 179   1              {
 180   2                      if(b & 0x01)
 181   2                      {
 182   3                              MMC_CMD = 0x05;
 183   3                      }
 184   2                      else
 185   2                      {
 186   3                              CS = 1;
 187   3                              MMC_CMD = 0x0A;
 188   3                      }
 189   2                      SPI0DAT = 0xFF; 
 190   2              }
 191   1              else if(MMC_CMD == 0x0A)
 192   1              {
 193   2                      
 194   2                      CS = 1;
 195   2                      if(szflash > 0)
 196   2                      {
 197   3                              MMC_CMD = 0xFF;
 198   3                      }
 199   2                      else
 200   2                      {
 201   3                              MMC_CMD = 0x20; 
 202   3                              SPIF = 1;
 203   3                      }
 204   2              } //--end Init--
 205   1              else if(MMC_CMD == 0x10) //--write--
 206   1              {
 207   2                      if(address == FILETABLE)
 208   2                      {
 209   3                              flash = 0;
 210   3                      }
 211   2                      flash = 0;
 212   2                      CS = 0; 
 213   2                      MMC_CMD = 0x11; 
 214   2                      stoprec++;
 215   2                      if(stoprec>0xBB5D7)
 216   2                      {
 217   3                              CS = 1;
 218   3                              MMC_CMD = 0xFE;
 219   3                      }
 220   2                      SPI0DAT = 0xFF;
 221   2              }
 222   1              else if(MMC_CMD == 0x11) 
 223   1              {
 224   2                      MMC_CMD = 0x12; 
 225   2                      SPI0DAT = 0x58;
 226   2              }
 227   1              else if(MMC_CMD == 0x12) 
 228   1              {
 229   2                      MMC_CMD = 0x13;
 230   2                      SPI0DAT = ((address & 0xff000000) >> 24);
 231   2              }
 232   1              else if(MMC_CMD == 0x13) 
 233   1              {
 234   2                      MMC_CMD = 0x14;
 235   2                      SPI0DAT = ((address & 0x00ff0000) >> 16);
 236   2              }
 237   1              else if(MMC_CMD == 0x14) 
 238   1              {
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 5   

 239   2                      MMC_CMD = 0x15;
 240   2                      SPI0DAT = ((address & 0x0000ff00) >> 8);
 241   2              }
 242   1              else if(MMC_CMD == 0x15) 
 243   1              {
 244   2                      MMC_CMD = 0x16;
 245   2                      SPI0DAT = address & 0x000000ff;
 246   2              }
 247   1              else if(MMC_CMD == 0x16) 
 248   1              {
 249   2                      address += 0x200;
 250   2                      if(address > szflash) 
 251   2                              address = 0xe00; 
 252   2                      MMC_CMD = 0x17;
 253   2                      SPI0DAT = 0xFF;
 254   2              }
 255   1              else if(MMC_CMD == 0x17)
 256   1              {
 257   2                      timeFlashOver = 0;
 258   2                      MMC_CMD = 0x18;
 259   2                      SPI0DAT = 0xFF;
 260   2              }
 261   1              else if(MMC_CMD == 0x18)
 262   1              {
 263   2                      b = SPI0DAT;    // 00-ok, 20-Adress Err, 40,60-Param Err
 264   2                      if(b == 0x00)
 265   2                      {
 266   3                              timeFlashOver=0;
 267   3                              MMC_CMD = 0x19;
 268   3                      }
 269   2                      else if(b == 0x20)
 270   2                      {
 271   3                              address = 0xe00;
 272   3                              MMC_CMD = 0xFF;
 273   3                      }
 274   2                      else if(b == 0x40 || b == 0x60)
 275   2                      {
 276   3                              timeFlashOver=0;
 277   3                              CS = 1;
 278   3                              flash = 3;
 279   3                              MMC_CMD = 0xFE;
 280   3                      }
 281   2                      else if(timeFlashOver++ > 0x001d0000)
 282   2                      {
 283   3                              timeFlashOver = 0;
 284   3                              CS = 1; 
 285   3                              flash = 0; 
 286   3                              MMC_CMD = 0x00;
 287   3                              address -= 0x200;
 288   3                              SPIF = 1;
 289   3                              goto EndSpiIsr;
 290   3                      }
 291   2                      SPI0DAT = 0xFF;
 292   2              }
 293   1              else if(MMC_CMD == 0x19)
 294   1              {
 295   2                      b = SPI0DAT;
 296   2                      if(b == 0xFF)
 297   2                      {
 298   3                              timeFlashOver=0;
 299   3                              MMC_CMD = 0x1A;
 300   3                      }
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 6   

 301   2                      else if(timeFlashOver++ > 0x001d0000)
 302   2                      {
 303   3                              address -= 0x200;
 304   3                              CS = 1;
 305   3                              flash = 0;
 306   3                              MMC_CMD = 0x00;
 307   3                              SPIF = 1;
 308   3                              goto EndSpiIsr;
 309   3                      }
 310   2                      SPI0DAT = 0xFF;
 311   2              }
 312   1              else if(MMC_CMD == 0x1A)
 313   1              {
 314   2                      i_CMD = 0;
 315   2                      MMC_CMD = 0x1B; 
 316   2                      SPI0DAT = 0xFE;
 317   2              }
 318   1              else if(MMC_CMD == 0x1B)
 319   1              {
 320   2                      if(i_CMD >= 0x200)
 321   2                      {
 322   3                              i_CMD = 0;      
 323   3                              MMC_CMD = 0x1C; 
 324   3                              SPIF = 0; 
 325   3                              SPI0DAT = 0xFF;
 326   3                      }
 327   2                      else
 328   2                      {
 329   3                              SPI0DAT = BufferInKZA[i_CMD++];
 330   3                      }
 331   2              }
 332   1              else if(MMC_CMD == 0x1C)
 333   1              {
 334   2                      timeFlashOver=0;
 335   2                      MMC_CMD = 0x1D; 
 336   2                      SPI0DAT = 0xFF;
 337   2              }
 338   1              else if(MMC_CMD == 0x1D)
 339   1              {
 340   2                      if(SPI0DAT == 0xFF)
 341   2                      {
 342   3                              MMC_CMD = 0x1E;
 343   3                              CS = 1;
 344   3                      }
 345   2                      else if(timeFlashOver++ > 0x001d0000)
 346   2                      {
 347   3                              address -= 0x200;
 348   3                              CS = 1;
 349   3                              flash = 0;
 350   3                              MMC_CMD = 0x00;
 351   3                              SPIF = 1;
 352   3                              goto EndSpiIsr;
 353   3                      }
 354   2                      SPI0DAT = 0xFF;
 355   2              }
 356   1              else if(MMC_CMD == 0x1E)
 357   1              {
 358   2                      if(jump > 0)
 359   2                      {
 360   3                              address = jumpaddr;
 361   3                              stoprec = 0;
 362   3                              jump = 0;
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 7   

 363   3                      }
 364   2      
 365   2                      if(i_CMD++ < 255)
 366   2                      {
 367   3                              SPI0DAT = 0xFF;
 368   3                      }
 369   2                      else
 370   2                      {
 371   3                              stoprec = 0;
 372   3                              MMC_CMD = 0xFF;
 373   3                              SPI0DAT = 0xFF;
 374   3                      }
 375   2                      
 376   2                      SPI0DAT = 0xFF;
 377   2              }
 378   1              else if(MMC_CMD == 0x20)        //-- CMD 9 --
 379   1              {
 380   2                      //-Ручной режим определения размера ММС-начало
 381   2                      MMC_CMD = 0xFF;
 382   2                      szflash = FLASHSIZE; 
 383   2                      SPIF = 1;
 384   2                      goto EndSpiIsr;
 385   2                      //-Ручной режим определения размера ММС-конец   
 386   2                      CS = 1;
 387   2                      flash = 0; 
 388   2                      MMC_CMD = 0x21; 
 389   2                      SPI0DAT = 0xFF;
 390   2              }
 391   1              else if(MMC_CMD == 0x21)
 392   1              {
 393   2                      CS = 0; 
 394   2                      MMC_CMD = 0x22; 
 395   2                      SPI0DAT = 0xFF;
 396   2              }
 397   1              else if(MMC_CMD == 0x22)
 398   1              {
 399   2                      MMC_CMD = 0x23; 
 400   2                      SPI0DAT = (9 | 0x40);
 401   2              }
 402   1              else if(MMC_CMD == 0x23)
 403   1              {
 404   2                      MMC_CMD = 0x24; 
 405   2                      SPI0DAT = 0x00;
 406   2              }
 407   1              else if(MMC_CMD == 0x24)
 408   1              {
 409   2                      MMC_CMD = 0x25; 
 410   2                      SPI0DAT = 0x00;
 411   2              }
 412   1              else if(MMC_CMD == 0x25)
 413   1              {
 414   2                      MMC_CMD = 0x26; 
 415   2                      SPI0DAT = 0x00;
 416   2              }
 417   1              else if(MMC_CMD == 0x26)
 418   1              {
 419   2                      MMC_CMD = 0x27; 
 420   2                      SPI0DAT = 0xFF;
 421   2              }
 422   1              else if(MMC_CMD == 0x27)
 423   1              {
 424   2                      b = SPI0DAT; 
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 8   

 425   2                      if(!(b & 0x80))
 426   2                      {                       
 427   3                              timeFlashOver=0;
 428   3                              MMC_CMD = 0x28;
 429   3                      }
 430   2                      SPI0DAT = 0xFF; 
 431   2              }
 432   1              else if(MMC_CMD == 0x28)
 433   1              {
 434   2                      b = SPI0DAT;
 435   2                      if(b == 0xFE)
 436   2                      {
 437   3                              timeFlashOver=0;
 438   3                              i_CMD = 0;      
 439   3                              MMC_CMD =0x2A;  
 440   3                              SPI0DAT = 0x00; 
 441   3                              goto EndSpiIsr;
 442   3                      }
 443   2                      else if(timeFlashOver++ > 0x0001f000)
 444   2                      {
 445   3                              timeFlashOver=0;
 446   3                              CS = 1; 
 447   3                              flash = 0;      
 448   3                              MMC_CMD = 0x00; 
 449   3                              SPIF = 1;
 450   3                              goto EndSpiIsr;
 451   3                      }
 452   2                      SPI0DAT = 0xFF; 
 453   2              }
 454   1              else if(MMC_CMD == 0x2A)
 455   1              {
 456   2                      *pchar++ = SPI0DAT;
 457   2                      if(i_CMD == 16)
 458   2                      {
 459   3                              i_CMD = 0;
 460   3                              MMC_CMD = 0x2B;
 461   3                              SPI0DAT = 0x00;
 462   3                      }
 463   2                      else
 464   2                      {
 465   3                              i_CMD++;
 466   3                              SPI0DAT = 0x00;
 467   3                      }
 468   2              }
 469   1              else if(MMC_CMD == 0x2B)
 470   1              {
 471   2                      dummy_CRC = SPI0DAT;  
 472   2                      MMC_CMD = 0x2C; 
 473   2                      SPI0DAT = 0x00;
 474   2              }
 475   1              else if(MMC_CMD == 0x2C)
 476   1              {
 477   2                      dummy_CRC = SPI0DAT;  
 478   2                      CS = 1; 
 479   2                      MMC_CMD = 0x2D; 
 480   2                      SPIF = 1; 
 481   2              }
 482   1              else if(MMC_CMD == 0x2D)
 483   1              {
 484   2                      MMC_CMD = 0xFF;
 485   2                      pchar += 9;
 486   2                      size = (unsigned int)((((*pchar) & 0x03) << 1) | (((*(pchar+1)) & 0x80) >> 7));
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 9   

 487   2              switch(size)                        
 488   2              {                                   
 489   3              case 1: szflash = 0x800000; break;
 490   3              case 2: szflash = 0x1000000; break;
 491   3              case 3: szflash = 0x2000000; break;
 492   3              case 4: szflash = 0x4000000; break;
 493   3              case 5: szflash = 0x8000000; break;
 494   3                              case 6: szflash = 0x10000000; break;
 495   3                              case 7: szflash = 0x20000000; break;
 496   3                              case 8: szflash = 0x40000000; break; //1Gb
 497   3                              case 9: szflash = 0x80000000; break;
 498   3              default: szflash = 0xf0000000; break;
 499   3              }               
 500   2                      SPI0DAT = 0xFF;
 501   2                      flash = 1;
 502   2              }//--end CMD9--
 503   1              else if(MMC_CMD == 0x30) //Read
 504   1              {
 505   2                      flash = 4; 
 506   2                      CS = 0; 
 507   2                      MMC_CMD = 0x31;
 508   2                      SPI0DAT = 0xFF;
 509   2              }
 510   1              else if(MMC_CMD == 0x31) 
 511   1              {
 512   2                      MMC_CMD = 0x32; 
 513   2                      SPI0DAT = 0x51;
 514   2              }
 515   1              else if(MMC_CMD == 0x32) 
 516   1              {
 517   2                      MMC_CMD = 0x33; 
 518   2                      SPI0DAT = (address & 0xff000000) >> 24;
 519   2              }
 520   1              else if(MMC_CMD == 0x33) 
 521   1              {
 522   2                      MMC_CMD = 0x34; 
 523   2                      SPI0DAT = (address & 0xff0000) >> 16;
 524   2              }
 525   1              else if(MMC_CMD == 0x34) 
 526   1              {
 527   2                      MMC_CMD = 0x35; 
 528   2                      SPI0DAT = (address & 0xff00) >> 8;
 529   2              }
 530   1              else if(MMC_CMD == 0x35) 
 531   1              {
 532   2                      MMC_CMD = 0x36; 
 533   2                      SPI0DAT = (address & 0xff);
 534   2              }
 535   1              else if(MMC_CMD == 0x36) 
 536   1              {
 537   2                      timeFlashOver=0;
 538   2                      MMC_CMD = 0x37; 
 539   2                      SPI0DAT = 0xFF;
 540   2              }
 541   1              else if(MMC_CMD == 0x37) 
 542   1              {
 543   2                      b = SPI0DAT;    // 00-ok, 20-Adress Err, 60-Param Err
 544   2                      if(b == 0x00)
 545   2                      {
 546   3                              MMC_CMD = 0x38;
 547   3                              timeFlashOver=0;
 548   3                      }
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 10  

 549   2                      else if(b == 0x20)
 550   2                      {
 551   3                              address = 0x00000c00;
 552   3                              MMC_CMD = 0x00;
 553   3                      }
 554   2                      else if(b == 0x60)
 555   2                      {
 556   3                              MMC_CMD = 0xFE;
 557   3                      }
 558   2                      else if(timeFlashOver++ > 0x001d0000)
 559   2                      {
 560   3                              CS = 1;
 561   3                              flash = 0;
 562   3                              SPIF = 1;
 563   3                              MMC_CMD = 0x00;
 564   3                              goto EndSpiIsr;
 565   3                      }
 566   2                      SPI0DAT = 0xFF;
 567   2              }
 568   1              else if(MMC_CMD == 0x38) 
 569   1              {
 570   2                      b = SPI0DAT;    
 571   2                      if(b == 0xFF)
 572   2                      {
 573   3                              timeFlashOver = 0;
 574   3                              MMC_CMD = 0x39;
 575   3                      }
 576   2                      else if(timeFlashOver++ > 0x001d0000)
 577   2                      {
 578   3                              CS = 1;
 579   3                              flash = 0;
 580   3                              SPIF = 1;
 581   3                              MMC_CMD = 0x00;
 582   3                              goto EndSpiIsr;
 583   3                      }
 584   2                      SPI0DAT = 0xFF;
 585   2              }
 586   1              else if(MMC_CMD == 0x39) 
 587   1              {
 588   2                      b = SPI0DAT;  // FE - DataToken, 08-Err Token Out Of Range
 589   2                      if(b != 0xFF)
 590   2                      {
 591   3                              MMC_CMD = 0x3A;
 592   3                              i_CMD = 0;
 593   3                      }
 594   2                      else if(timeFlashOver++ > 0x001d0000)
 595   2                      {
 596   3                              CS = 1;
 597   3                              flash = 0;
 598   3                              SPIF = 1;
 599   3                              MMC_CMD = 0x00;
 600   3                              goto EndSpiIsr;
 601   3                      }
 602   2                      SPI0DAT = 0xFF;
 603   2              }
 604   1              else if(MMC_CMD == 0x3A) 
 605   1              {
 606   2                      b = SPI0DAT; 
 607   2                      if(i_CMD<512)
 608   2                      {
 609   3                              BuffFromKza[i_CMD++] = b;
 610   3                              SPI0DAT = 0xFF;
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 11  

 611   3                      }
 612   2                      else
 613   2                      {
 614   3                              i_CMD++;
 615   3                              SPIF = 1;
 616   3                      }
 617   2      
 618   2                      if(i_CMD>=514)
 619   2                      {
 620   3                              i_CMD = 0;
 621   3                              timeFlashOver = 0;
 622   3                              MMC_CMD = 0x3B;
 623   3                      }
 624   2                      
 625   2              }
 626   1              else if(MMC_CMD == 0x3B)
 627   1              {
 628   2                      if(SPI0DAT == 0xFF)
 629   2                      {
 630   3                              CS = 1;
 631   3                              MMC_CMD = 0x3C;
 632   3                              flash = 5;
 633   3                              goto EndSpiIsr;
 634   3                      }
 635   2                      else if(timeFlashOver++ > 0x001d0000)
 636   2                      {
 637   3                              CS = 1;
 638   3                              flash = 0;
 639   3                              SPIF = 1;
 640   3                              MMC_CMD = 0x00;
 641   3                              goto EndSpiIsr;
 642   3                      }
 643   2                      SPI0DAT = 0xFF;
 644   2              } 
 645   1       //-end read
 646   1              else if(MMC_CMD == 0x40) //--eof--
 647   1              {
 648   2                      CS = 0; 
 649   2                      MMC_CMD = 0x41; 
 650   2                      SPI0DAT = 0xFF;
 651   2              }
 652   1              else if(MMC_CMD == 0x41) 
 653   1              {
 654   2                      MMC_CMD = 0x42; 
 655   2                      SPI0DAT = 0x58;
 656   2              }
 657   1              else if(MMC_CMD == 0x42) 
 658   1              {
 659   2                      MMC_CMD = 0x43;
 660   2                      SPI0DAT = ((eofaddr & 0xff000000) >> 24);
 661   2              }
 662   1              else if(MMC_CMD == 0x43) 
 663   1              {
 664   2                      MMC_CMD = 0x44;
 665   2                      SPI0DAT = ((eofaddr & 0x00ff0000) >> 16);
 666   2              }
 667   1              else if(MMC_CMD == 0x44) 
 668   1              {
 669   2                      MMC_CMD = 0x45;
 670   2                      SPI0DAT = ((eofaddr & 0x0000ff00) >> 8);
 671   2              }
 672   1              else if(MMC_CMD == 0x45) 
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 12  

 673   1              {
 674   2                      MMC_CMD = 0x46;
 675   2                      SPI0DAT = eofaddr & 0x000000ff;
 676   2              }
 677   1              else if(MMC_CMD == 0x46) 
 678   1              {
 679   2                      MMC_CMD = 0x47;
 680   2                      SPI0DAT = 0xFF;
 681   2              }
 682   1              else if(MMC_CMD == 0x47)
 683   1              {
 684   2                      timeFlashOver = 0;
 685   2                      MMC_CMD = 0x48;
 686   2                      SPI0DAT = 0xFF;
 687   2              }
 688   1              else if(MMC_CMD == 0x48)
 689   1              {
 690   2                      b = SPI0DAT;    // 00-ok, 20-Adress Err, 40,60-Param Err
 691   2                      if(b == 0x00)
 692   2                      {
 693   3                              timeFlashOver=0;
 694   3                              MMC_CMD = 0x49;
 695   3                      }
 696   2                      else if(b == 0x20)
 697   2                      {
 698   3                              address = 0x00000e00;
 699   3                              MMC_CMD = 0xFF;
 700   3                      }
 701   2                      else if(b == 0x40 || b == 0x60)
 702   2                      {
 703   3                              timeFlashOver=0;
 704   3                              CS = 1;
 705   3                              flash = 3;
 706   3                              MMC_CMD = 0xFE;
 707   3                      }
 708   2                      else if(timeFlashOver++ > 0x0001f000)
 709   2                      {
 710   3                              timeFlashOver = 0;
 711   3                              CS = 1; 
 712   3                              flash = 0; 
 713   3                              flageofrec = 1;
 714   3                              MMC_CMD = 0x00;
 715   3                              SPIF = 1;
 716   3                              goto EndSpiIsr;
 717   3                      }
 718   2                      SPI0DAT = 0xFF;
 719   2              }
 720   1              else if(MMC_CMD == 0x49)
 721   1              {
 722   2                      b = SPI0DAT;
 723   2                      if(b == 0xFF)
 724   2                      {
 725   3                              timeFlashOver=0;
 726   3                              MMC_CMD = 0x4A;
 727   3                      }
 728   2                      else if(timeFlashOver++ > 0x0001f000)
 729   2                      {
 730   3                              CS = 1;
 731   3                              flash = 0;
 732   3                              flageofrec = 1;
 733   3                              MMC_CMD = 0x00;
 734   3                              SPIF = 1;
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 13  

 735   3                              goto EndSpiIsr;
 736   3                      }
 737   2                      SPI0DAT = 0xFF;
 738   2              }
 739   1              else if(MMC_CMD == 0x4A)
 740   1              {
 741   2                      i_CMD = 0;
 742   2                      MMC_CMD = 0x4B; 
 743   2                      SPI0DAT = 0xFE;
 744   2              }
 745   1              else if(MMC_CMD == 0x4B)
 746   1              {
 747   2                      if(i_CMD >= 0x200)
 748   2                      {
 749   3                              i_CMD = 0;      
 750   3                              MMC_CMD = 0x4C; 
 751   3                              SPIF = 0; 
 752   3                              SPI0DAT = 0xFF;
 753   3                      }
 754   2                      else
 755   2                      {
 756   3                              SPI0DAT = BufferInKZA[i_CMD++];
 757   3                      }
 758   2              }
 759   1              else if(MMC_CMD == 0x4C)
 760   1              {
 761   2                      timeFlashOver=0;
 762   2                      MMC_CMD = 0x4D; 
 763   2                      SPI0DAT = 0xFF;
 764   2              }
 765   1              else if(MMC_CMD == 0x4D)
 766   1              {
 767   2                      if(SPI0DAT == 0xFF)
 768   2                      {
 769   3                              i_CMD = 0;
 770   3                              MMC_CMD = 0x4E;
 771   3                              CS = 1;
 772   3                      }
 773   2                      else if(timeFlashOver++ > 0x0001f000)
 774   2                      {
 775   3                              flageofrec = 1;
 776   3                              CS = 1;
 777   3                              flash = 0;
 778   3                              MMC_CMD = 0x00;
 779   3                              SPIF = 1;
 780   3                              goto EndSpiIsr;
 781   3                      }
 782   2                      SPI0DAT = 0xFF;
 783   2              }
 784   1              else if(MMC_CMD == 0x4E)
 785   1              {
 786   2                      if(i_CMD++ < 255)
 787   2                      {
 788   3                              SPI0DAT = 0xFF;
 789   3                      }
 790   2                      else
 791   2                      {
 792   3                              MMC_CMD = 0x50;
 793   3                              SPI0DAT = 0xFF;
 794   3                      }
 795   2              }
 796   1              else if(MMC_CMD == 0x50)
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 14  

 797   1              {
 798   2                      flash = 4; 
 799   2                      CS = 0; 
 800   2                      MMC_CMD = 0x51;
 801   2                      SPI0DAT = 0xFF;
 802   2              }
 803   1              else if(MMC_CMD == 0x51) 
 804   1              {
 805   2                      MMC_CMD = 0x52; 
 806   2                      SPI0DAT = 0x51;
 807   2              }
 808   1              else if(MMC_CMD == 0x52) 
 809   1              {
 810   2                      MMC_CMD = 0x53; 
 811   2                      SPI0DAT = (eofaddr & 0xff000000) >> 24;
 812   2              }
 813   1              else if(MMC_CMD == 0x53) 
 814   1              {
 815   2                      MMC_CMD = 0x54; 
 816   2                      SPI0DAT = (eofaddr & 0xff0000) >> 16;
 817   2              }
 818   1              else if(MMC_CMD == 0x54) 
 819   1              {
 820   2                      MMC_CMD = 0x55; 
 821   2                      SPI0DAT = (eofaddr & 0xff00) >> 8;
 822   2              }
 823   1              else if(MMC_CMD == 0x55) 
 824   1              {
 825   2                      MMC_CMD = 0x56; 
 826   2                      SPI0DAT = (eofaddr & 0xff);
 827   2              }
 828   1              else if(MMC_CMD == 0x56) 
 829   1              {
 830   2                      timeFlashOver=0;
 831   2                      MMC_CMD = 0x57; 
 832   2                      SPI0DAT = 0xFF;
 833   2              }
 834   1              else if(MMC_CMD == 0x57) 
 835   1              {
 836   2                      b = SPI0DAT;    // 00-ok, 20-Adress Err, 60-Param Err
 837   2                      if(b == 0x00)
 838   2                      {
 839   3                              MMC_CMD = 0x58;
 840   3                              timeFlashOver=0;
 841   3                      }
 842   2                      else if(b == 0x20)
 843   2                      {
 844   3                              flageofrec = 1;
 845   3                              MMC_CMD = 0x00;
 846   3                      }
 847   2                      else if(b == 0x60)
 848   2                      {
 849   3                              MMC_CMD = 0xFE;
 850   3                      }
 851   2                      else if(timeFlashOver++ > 0x0001f000)
 852   2                      {
 853   3                              flageofrec = 1;
 854   3                              CS = 1;
 855   3                              flash = 0;
 856   3                              SPIF = 1;
 857   3                              MMC_CMD = 0x00;
 858   3                              goto EndSpiIsr;
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 15  

 859   3                      }
 860   2                      SPI0DAT = 0xFF;
 861   2              }
 862   1              else if(MMC_CMD == 0x58) 
 863   1              {
 864   2                      b = SPI0DAT;    
 865   2                      if(b == 0xFF)
 866   2                      {
 867   3                              timeFlashOver = 0;
 868   3                              MMC_CMD = 0x59;
 869   3                      }
 870   2                      else if(timeFlashOver++ > 0x0001f000)
 871   2                      {
 872   3                              CS = 1;
 873   3                              flash = 0;
 874   3                              SPIF = 1;
 875   3                              flageofrec = 1;
 876   3                              MMC_CMD = 0x00;
 877   3                              goto EndSpiIsr;
 878   3                      }
 879   2                      SPI0DAT = 0xFF;
 880   2              }
 881   1              else if(MMC_CMD == 0x59) 
 882   1              {
 883   2                      b = SPI0DAT;  // FE - DataToken, 08-Err Token Out Of Range
 884   2                      if(b != 0xFF)
 885   2                      {
 886   3                              MMC_CMD = 0x5A;
 887   3                              i_CMD = 0;
 888   3                      }
 889   2                      else if(timeFlashOver++ > 0x0001f000)
 890   2                      {
 891   3                              CS = 1;
 892   3                              flash = 0;
 893   3                              SPIF = 1;
 894   3                              flageofrec = 1;
 895   3                              MMC_CMD = 0x00;
 896   3                              goto EndSpiIsr;
 897   3                      }
 898   2                      SPI0DAT = 0xFF;
 899   2              }
 900   1              else if(MMC_CMD == 0x5A) 
 901   1              {
 902   2                      b = SPI0DAT; 
 903   2                      if(i_CMD<512)
 904   2                      {
 905   3                              BuffFromKza[i_CMD++] = b;
 906   3                              SPI0DAT = 0xFF;
 907   3                      }
 908   2                      else
 909   2                      {
 910   3                              i_CMD++;
 911   3                              SPIF = 1;
 912   3                      }
 913   2      
 914   2                      if(i_CMD>=514)
 915   2                      {
 916   3                              i_CMD = 0;
 917   3                              timeFlashOver = 0;
 918   3                              MMC_CMD = 0x5B;
 919   3                      }
 920   2                      
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 16  

 921   2              }
 922   1              else if(MMC_CMD == 0x5B)
 923   1              {
 924   2                      if(SPI0DAT == 0xFF)
 925   2                      {
 926   3                              CS = 1;
 927   3                              MMC_CMD = 0x5C;
 928   3                      }
 929   2                      else if(timeFlashOver++ > 0x0001f000)
 930   2                      {
 931   3                              CS = 1;
 932   3                              flash = 0;
 933   3                              SPIF = 1;
 934   3                              flageofrec = 1;
 935   3                              MMC_CMD = 0x00;
 936   3                              goto EndSpiIsr;
 937   3                      }
 938   2                      SPI0DAT = 0xFF;
 939   2              } 
 940   1              else if(MMC_CMD == 0x5C)
 941   1              {
 942   2                      if(BuffFromKza[0]==0x65 && BuffFromKza[1]==0x6f && BuffFromKza[2] == 0x66 && BuffFromKza[3]==0x65 && Buf
             -fFromKza[4]==0x6f && BuffFromKza[5] ==0x66 && BuffFromKza[6]==0x65 && BuffFromKza[7]==0x6f && BuffFromKza[8] ==0x66)
 943   2                      {
 944   3                              flash = 1;
 945   3                              flageofrec = 0;
 946   3                              MMC_CMD = 0xFF;
 947   3                      }
 948   2                      else
 949   2                      {
 950   3                              if(eoferr++>100)
 951   3                              {
 952   4                                      eoferr = 0;
 953   4                                      eofaddr += 0x200;
 954   4                              }
 955   3                              MMC_CMD = 0x40;
 956   3                              SPIF = 1;
 957   3                      }
 958   2              }
 959   1      //------------------------
 960   1              EndSpiIsr:
 961   1              SFRPAGE = SFRPAGE_SAVE;
 962   1              return;
 963   1      }
 964          
 965          //-----------------------------------------------------------------------
 966          void MMC_init1(void)
 967          {
 968   1              for(i_wr = 0; i_wr < 512; i_wr++)
 969   1              {
 970   2                      BufferInKZA[i_wr] = 0;
 971   2                      BuffFromKza[i_wr] = 0;
 972   2              }
 973   1              address = STARTADDR;
 974   1              nzap = 0;
 975   1              szflash = 0;
 976   1              MMC_CMD = 0x00;
 977   1              SPIF = 1;
 978   1              return;
 979   1      }
 980          
 981          //-----------------------------------------------------------------------
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 17  

 982          bit WriteInKZA(unsigned char byte)
 983          {
 984   1              static xdata unsigned int counterBuf = 9, dogtim=0;//, endZapCount = 0;
 985   1              xdata unsigned char CRC;
 986   1              xdata unsigned long tmpNzap;
 987   1              static xdata unsigned long /*saveaddr,*/ eof=0;
 988   1              
 989   1              if(MMC_CMD == 0xFF) //флешка свободна
 990   1              {
 991   2                      flash = 1;
 992   2              }
 993   1      
 994   1              if(MMC_CMD == 0xFE)
 995   1              {
 996   2                      return 0;
 997   2              }
 998   1              if((newfile == 1)&&(szflash > 0)&&(flash==1)) //запись в таблице файлов
 999   1              {
1000   2                      for(i_wr = 0; i_wr < 512; i_wr++)
1001   2                      {
1002   3                              BufferInKZA[i_wr] = 0;
1003   3                              BuffFromKza[i_wr] = 0;
1004   3                      }
1005   2                      lastaddr = address;
1006   2                      address = FILETABLE;
1007   2                      flash = 4;
1008   2                      MMC_CMD = 0x30;
1009   2                      SPIF = 1;
1010   2                      dogtim=0;
1011   2                      while(flash!=5)
1012   2                      {
1013   3                              if((dogtim++)>0x0f00)
1014   3                              {
1015   4                                      goto nofat; 
1016   4                              }
1017   3                      }
1018   2                      slipbyte = nzap;
1019   2                      while(slipbyte>46)
1020   2                      {
1021   3                              slipbyte-=45;
1022   3                      }
1023   2                      slipbyte = slipbyte*11;
1024   2                      address = FILETABLE;
1025   2                      jump = 1;
1026   2                      for(i_wr = 0; i_wr < 512; i_wr++)
1027   2                      {
1028   3                              BufferInKZA[i_wr] = BuffFromKza[i_wr]; //0x0; 
1029   3                      }       
1030   2                      BufferInKZA[slipbyte] = (nzap & 0xff00) >> 8;
1031   2                      BufferInKZA[slipbyte+1] =  nzap & 0x00ff;
1032   2                      BufferInKZA[slipbyte+2] = (lastaddr & 0xff000000) >> 24;
1033   2                      BufferInKZA[slipbyte+3] = (lastaddr & 0x00ff0000) >> 16;
1034   2                      BufferInKZA[slipbyte+4] = (lastaddr & 0x0000ff00) >> 8;
1035   2                      BufferInKZA[slipbyte+5] =  lastaddr & 0x000000ff;  
1036   2                      BufferInKZA[slipbyte+6] = (time_t & 0xff000000) >> 24;
1037   2                      BufferInKZA[slipbyte+7] = (time_t & 0x00ff0000) >> 16;
1038   2                 BufferInKZA[slipbyte+8] = (time_t & 0x0000ff00) >> 8;
1039   2                      BufferInKZA[slipbyte+9] = (time_t & 0x000000ff);
1040   2                      CRC = BufferInKZA[slipbyte];            
1041   2                      for(i_wr = (slipbyte+1); i_wr < (slipbyte+10); i_wr++)
1042   2                      {
1043   3                              CRC = CRC^BufferInKZA[i_wr];
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 18  

1044   3                      }
1045   2                      BufferInKZA[slipbyte+10]  = CRC;
1046   2                      MMC_CMD = 0x10;
1047   2                      SPIF = 1;
1048   2                      dogtim=0;
1049   2                      while(flash!=1)
1050   2                      {
1051   3                              if((dogtim++)>0x0f00)
1052   3                              {
1053   4                                      
1054   4                                      goto nofat; 
1055   4                              }
1056   3                      }
1057   2                      newfile = 0;
1058   2                      nofat:
1059   2                      address = lastaddr;
1060   2              }
1061   1      
1062   1              if((flageofrec == 1)&&(flash == 1)) //команда на запись конца файла
1063   1              {
1064   2                      flash = 0;
1065   2                      for(i_wr = 0; i_wr < 9; i_wr++)
1066   2                      {
1067   3                              BufferInKZA[i_wr++]=0x65;
1068   3                              BufferInKZA[i_wr++]=0x6f;
1069   3                              BufferInKZA[i_wr]=0x66;
1070   3                      }
1071   2                      MMC_CMD = 0x40;
1072   2                      SPIF = 1;
1073   2                      while(flash!=1)
1074   2                      {
1075   3                              if((dogtim++)>0x0f00)
1076   3                              {
1077   4                                      break; 
1078   4                              }
1079   3                      }
1080   2              }       
1081   1              if((flash == 1)&&(nzap == 0)&&(szflash > 0))//если флешка готова прочитать заголовочный сектор
1082   1              {
1083   2                      address = ZAGOLOVOK; 
1084   2                      flash = 4;
1085   2                      MMC_CMD = 0x30;
1086   2                      SPIF = 1;
1087   2                      dogtim = 0;
1088   2                      while(flash!=5)
1089   2                      {
1090   3                              if((dogtim++)>0x0f00)
1091   3                              {
1092   4                                      break; 
1093   4                              }
1094   3                      }
1095   2              }
1096   1                      if((flash == 5)&&(nzap == 0)&&(szflash > 0))//если произошло чтение но заголовок не расшифрован, расшифр
             -овать
1097   1                      {
1098   2                              CRC = BuffFromKza[0];
1099   2                              for(i_wr = 1; i_wr < 9; i_wr++)
1100   2                              {
1101   3                                      CRC = CRC^BuffFromKza[i_wr];;
1102   3                              }
1103   2                              if(!CRC && (BuffFromKza[0]!=0 || BuffFromKza[1]!=0 || BuffFromKza[2]!=0 || BuffFromKza[3]!=0 || BuffFro
             -mKza[4]!=0 || BuffFromKza[5]!=0 || BuffFromKza[6]!=0 || BuffFromKza[7]!=0 || BuffFromKza[8]!=0)) 
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 19  

1104   2                              {
1105   3                                      nzap = BuffFromKza[0];
1106   3                                      for(i_wr = 1; i_wr < 4; i_wr++)
1107   3                                      {
1108   4                                              nzap = (nzap<<8)+BuffFromKza[i_wr];
1109   4                                      }
1110   3                                      lastaddr = BuffFromKza[4];
1111   3                                      for(i_wr = 5; i_wr < 8; i_wr++)
1112   3                                      {
1113   4                                              lastaddr = (lastaddr<<8)+BuffFromKza[i_wr];
1114   4                                      }
1115   3                                      
1116   3                                      address = lastaddr;
1117   3                              }
1118   2                              else //если произошла неудача расшифровки, считать, что запись первая, и с начала
1119   2                              {
1120   3                                      nzap = 1;
1121   3                                      address = STARTADDR; 
1122   3                                      lastaddr = address;
1123   3                              }
1124   2                              flash = 4;
1125   2                              MMC_CMD = 0x30;
1126   2                              SPIF = 1;
1127   2                              dogtim = 0;
1128   2                              while(flash!=5)
1129   2                              {
1130   3                                      if((dogtim++)>0x0f00)
1131   3                                      {
1132   4                                              break; 
1133   4                                      }
1134   3                              }
1135   2                      }
1136   1                      if((flash == 5)&&(nzap == 1)&&(szflash > 0)) //если запись первая создаем заголовок, начинаем писать дан
             -ные
1137   1                      {
1138   2                              eofaddr = EOFDELTA;
1139   2                              address = ZAGOLOVOK;
1140   2                              lastaddr = STARTADDR;
1141   2                              jump = 1;
1142   2                              jumpaddr = STARTADDR;
1143   2                              nzap++;
1144   2                              newfile =1;
1145   2                              for(i_wr = 0; i_wr < 512; i_wr++)
1146   2                              {
1147   3                                      BufferInKZA[i_wr++]=0x00;
1148   3                              }
1149   2                              BufferInKZA[0] = (nzap & 0xff000000) >> 24;
1150   2                              BufferInKZA[1] = (nzap & 0x00ff0000) >> 16;
1151   2                              BufferInKZA[2] = (nzap & 0x0000ff00) >> 8;
1152   2                              BufferInKZA[3] =  nzap & 0x000000ff;  
1153   2                              BufferInKZA[4] = (lastaddr & 0xff000000) >> 24;
1154   2                              BufferInKZA[5] = (lastaddr & 0x00ff0000) >> 16;
1155   2                              BufferInKZA[6] = (lastaddr & 0x0000ff00) >> 8;
1156   2                              BufferInKZA[7] =  lastaddr & 0x000000ff;  
1157   2                              CRC = BufferInKZA[0];           
1158   2                              for(i_wr = 1; i_wr < 8; i_wr++)
1159   2                              {
1160   3                                      CRC = CRC^BufferInKZA[i_wr];
1161   3                              }
1162   2                              BufferInKZA[8]  = CRC;
1163   2                              flash = 0;
1164   2                              MMC_CMD = 0x10;
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 20  

1165   2                              SPIF = 1;
1166   2                              dogtim = 0;
1167   2                              while(flash!=1)
1168   2                              {
1169   3                                      if((dogtim++)>0x0f00)
1170   3                                      {
1171   4                                              break; 
1172   4                                      }
1173   3                              }       
1174   2                      }
1175   1                      if((flash == 5)&&(nzap > 1)&&(szflash > 0)) //если запись уже не первая идет поиск конца файла
1176   1                      {
1177   2                              tmpNzap = BuffFromKza[0];
1178   2                              for(i_wr = 1; i_wr < 4; i_wr++)
1179   2                              {
1180   3                                      tmpNzap = (tmpNzap<<8)+BuffFromKza[i_wr];
1181   3                              }
1182   2                                              
1183   2                              if(nzap != tmpNzap)
1184   2                              {
1185   3                                      if(BuffFromKza[0]==0x65 && BuffFromKza[1]==0x6f && BuffFromKza[2] == 0x66 && BuffFromKza[3]==0x65 && B
             -uffFromKza[4]==0x6f && BuffFromKza[5] ==0x66 && BuffFromKza[6]==0x65 && BuffFromKza[7]==0x6f && BuffFromKza[8] ==0x66)
1186   3                                      {
1187   4                                              lastaddr = address;
1188   4                                              jumpaddr = address;
1189   4                                              address = ZAGOLOVOK;
1190   4                                              jump = 1;
1191   4                                                       
1192   4                                              nzap++;
1193   4                                              newfile = 1;
1194   4                                              for(i_wr = 0; i_wr < 512; i_wr++)
1195   4                                              {
1196   5                                                      BufferInKZA[i_wr++]=0x00;
1197   5                                              }
1198   4                                              BufferInKZA[0] = (nzap & 0xff000000) >> 24;
1199   4                                              BufferInKZA[1] = (nzap & 0x00ff0000) >> 16;
1200   4                                         BufferInKZA[2] = (nzap & 0x0000ff00) >> 8;
1201   4                                              BufferInKZA[3] =  nzap & 0x000000ff;  
1202   4                                              BufferInKZA[4] = (lastaddr & 0xff000000) >> 24;
1203   4                                              BufferInKZA[5] = (lastaddr & 0x00ff0000) >> 16;
1204   4                                              BufferInKZA[6] = (lastaddr & 0x0000ff00) >> 8;
1205   4                                              BufferInKZA[7] =  lastaddr & 0x000000ff;  
1206   4                                              CRC = BufferInKZA[0];           
1207   4                                              for(i_wr = 1; i_wr < 8; i_wr++)
1208   4                                              {
1209   5                                                      CRC = CRC^BufferInKZA[i_wr];
1210   5                                              }
1211   4                                              BufferInKZA[8]  = CRC;
1212   4                                              MMC_CMD = 0x10;
1213   4                                              SPIF = 1;
1214   4                                              dogtim = 0;
1215   4                                              while(flash!=1)
1216   4                                              {
1217   5                                                      if((dogtim++)>0x0f00)
1218   5                                                      {
1219   6                                                              break;  
1220   6                                                      }
1221   5                                              }
1222   4                                      }
1223   3                                      else
1224   3                                      {
1225   4                                              lastaddr = address;
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 21  

1226   4                                              address += 0x200;       
1227   4                                              if(address > szflash) 
1228   4                                                      address = STARTADDR;
1229   4                                      
1230   4                                              eof++;
1231   4                                              if(eof>0x3e8)   
1232   4                                              {
1233   5                                                      lastaddr = eofaddr;
1234   5                                                      address = ZAGOLOVOK;
1235   5                                                      jumpaddr = eofaddr;
1236   5                                                      jump = 1;
1237   5                                                      nzap++;
1238   5                                                      newfile = 1;
1239   5                                                      for(i_wr = 0; i_wr < 512; i_wr++)
1240   5                                                      {
1241   6                                                              BufferInKZA[i_wr++]=0x00;
1242   6                                                      }
1243   5                                                      BufferInKZA[0] = (nzap & 0xff000000) >> 24;
1244   5                                                      BufferInKZA[1] = (nzap & 0x00ff0000) >> 16;
1245   5                                              BufferInKZA[2] = (nzap & 0x0000ff00) >> 8;
1246   5                                                      BufferInKZA[3] =  nzap & 0x000000ff;  
1247   5                                                      BufferInKZA[4] = (lastaddr & 0xff000000) >> 24;
1248   5                                                      BufferInKZA[5] = (lastaddr & 0x00ff0000) >> 16;
1249   5                                                      BufferInKZA[6] = (lastaddr & 0x0000ff00) >> 8;
1250   5                                                      BufferInKZA[7] =  lastaddr & 0x000000ff;  
1251   5                                                      CRC = BufferInKZA[0];           
1252   5                                                      for(i_wr = 1; i_wr < 8; i_wr++)
1253   5                                                      {
1254   6                                                              CRC = CRC^BufferInKZA[i_wr];
1255   6                                                      }
1256   5                                                      BufferInKZA[8]  = CRC;
1257   5                                                      MMC_CMD = 0x10;
1258   5                                                      SPIF = 1;
1259   5                                                      dogtim = 0;
1260   5                                                      while(flash!=1)
1261   5                                                      {
1262   6                                                              if((dogtim++)>0x0f00)
1263   6                                                              {
1264   7                                                                      break;  
1265   7                                                              }
1266   6                                                      }
1267   5                                              }
1268   4                                              else
1269   4                                              {
1270   5                                                      flash = 4;
1271   5                                                      MMC_CMD = 0x30;
1272   5                                                      SPIF = 1;
1273   5                                                      dogtim = 0;
1274   5                                                      while(flash!=5)
1275   5                                                      {
1276   6                                                              if((dogtim++)>0x0f00)
1277   6                                                              {
1278   7                                                                      break; 
1279   7                                                              }
1280   6                                                      }               
1281   5                                              }
1282   4                                      }
1283   3                              }
1284   2                              else  //читать дальше
1285   2                              {
1286   3                                      CRC = BuffFromKza[0];
1287   3                                      for(i_wr = 1; i_wr < 9; i_wr++)
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 22  

1288   3                                      {
1289   4                                              CRC = CRC^BuffFromKza[i_wr];;
1290   4                                      }
1291   3                                      if(!CRC) 
1292   3                                      {
1293   4                                              lastaddr = address;
1294   4                                              address = BuffFromKza[4];
1295   4                                              address = (address<<8)+BuffFromKza[5];
1296   4                                              address = (address<<8)+BuffFromKza[6];
1297   4                                              address = (address<<8)+BuffFromKza[7];
1298   4                                      }
1299   3                                      else
1300   3                                      {
1301   4                                              lastaddr = address;
1302   4                                              address += 0x200;       
1303   4                                      }
1304   3                                      flash = 4;
1305   3                                      MMC_CMD = 0x30;
1306   3                                      SPIF = 1;
1307   3                                      dogtim = 0;
1308   3                                      while(flash!=5)
1309   3                                      {
1310   4                                              if((dogtim++)>0x0f00)
1311   4                                              {
1312   5                                                      break;
1313   5                                              }
1314   4                                      }
1315   3                              }
1316   2                      }
1317   1              
1318   1              if((flash == 1)&&(counterBuf < 512)) //Заполнение буфера на запись при свободном носителе
1319   1              {
1320   2                      BufferInKZA[counterBuf++] = byte;       
1321   2                      return 1;
1322   2              }
1323   1              else if((counterBuf >= 512)&&(szflash > 0)&&(flash == 1)) //если буфер заполнился
1324   1              {
1325   2                      if((eofaddr-address) < 0x400 || (eofaddr-address) > szflash) //если приближаемся к метке конца записи, п
             -ередвинуть ее
1326   2                      {
1327   3                              flageofrec = 1;
1328   3                              do
1329   3                              {
1330   4                                      eofaddr = address + EOFDELTA;
1331   4                                      if(eofaddr > szflash) 
1332   4                                      {
1333   5                                              lastaddr = address;
1334   5                                              eofaddr = EOFDELTA;                     
1335   5                                              address = STARTADDR;
1336   5                                      }
1337   4                              }
1338   3                              while((eofaddr-address) > szflash);
1339   3                              for(i_wr = 0; i_wr < 9; i_wr++)
1340   3                              {
1341   4                                      BufferInKZA[i_wr++]=0x65;
1342   4                                      BufferInKZA[i_wr++]=0x6f;
1343   4                                      BufferInKZA[i_wr]=0x66;
1344   4                              }
1345   3                              MMC_CMD = 0x40;
1346   3                              SPIF = 1;
1347   3                              dogtim = 0;
1348   3                              while(flash!=1)
C51 COMPILER V9.00   MMCFLASH6                                                             10/20/2012 13:37:15 PAGE 23  

1349   3                              {
1350   4                                      if((dogtim++)>0x0f00)
1351   4                                      {
1352   5                                              return 0; 
1353   5                                      }
1354   4                              }
1355   3                      }
1356   2                      else //записать сектор с данными
1357   2                      {
1358   3                              BufferInKZA[0] = (nzap & 0xff000000) >> 24;
1359   3                              BufferInKZA[1] = (nzap & 0x00ff0000) >> 16;
1360   3                      BufferInKZA[2] = (nzap & 0x0000ff00) >> 8;
1361   3                              BufferInKZA[3] =  nzap & 0x000000ff;  
1362   3                              BufferInKZA[4] = (eofaddr & 0xff000000) >> 24;
1363   3                              BufferInKZA[5] = (eofaddr & 0x00ff0000) >> 16;
1364   3                              BufferInKZA[6] = (eofaddr & 0x0000ff00) >> 8;
1365   3                              BufferInKZA[7] =  eofaddr & 0x000000ff;  
1366   3                              CRC = BufferInKZA[0];           
1367   3                              for(i_wr = 1; i_wr < 8; i_wr++)
1368   3                              {
1369   4                                      CRC = CRC^BufferInKZA[i_wr];
1370   4                              }
1371   3                              BufferInKZA[8]  = CRC;
1372   3                              counterBuf = 9;
1373   3                              MMC_CMD = 0x10;
1374   3                              SPIF = 1;
1375   3                              dogtim = 0;
1376   3                              while(flash!=1)
1377   3                              {
1378   4                                      if((dogtim++)>0x0f00)
1379   4                                      {
1380   5                                              return 0; 
1381   5                                      }
1382   4                              }
1383   3                      }
1384   2              }
1385   1              else if((flash == 1)&&(szflash == 0)) //выяснить размер носителя, если это неизвесно
1386   1              {
1387   2                      MMC_CMD = 0x20;
1388   2                      SPIF = 1;
1389   2              }
1390   1      
1391   1              return 0;
1392   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   8875    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   1088      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
